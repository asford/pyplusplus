// This file has been generated by pyplusplus.

// Copyright 2004 Roman Yakovenko.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#include "boost/python.hpp"
#ifdef _MSC_VER
    #pragma hdrstop
#endif //_MSC_VER

#include "unittests/data/casting_to_be_exported.hpp"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(casting){
    bp::class_< casting::y >( "y" );

    bp::class_< casting::x >( "x" )    
        .def( bp::init< >()[bp::default_call_policies()] )    
        .def( bp::init< int >(( bp::arg("i") ))[bp::default_call_policies()] )    
        .def( bp::init< bool >(( bp::arg("b") ))[bp::default_call_policies()] )    
        .def( "__int__", &casting::x::operator int ,bp::default_call_policies() )    
        .def_readwrite( "value", &casting::x::value );

    bp::implicitly_convertible< int, casting::x >();

    bp::implicitly_convertible< bool, casting::x >();

    bp::implicitly_convertible< casting::x, int >();

    bp::def( "x_value"
            , &casting::x_value
            , ( bp::arg("d") )
            , bp::default_call_policies() );

    bp::def( "identity"
            , &casting::identity
            , ( bp::arg("z") )
            , bp::default_call_policies() );
}
