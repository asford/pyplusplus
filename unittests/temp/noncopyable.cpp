// This file has been generated by pyplusplus.

// Copyright 2004 Roman Yakovenko.
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#include "boost/python.hpp"
#ifdef _MSC_VER
    #pragma hdrstop
#endif //_MSC_VER

#include "unittests/data/noncopyable_to_be_exported.hpp"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(noncopyable){
    bp::class_< noncopyables::d_t, boost::noncopyable >( "d_t" )    
        .def( bp::init< >()[bp::default_call_policies()] )    
        .def( "get_d"
                , (char (*)(  ))(&noncopyables::d_t::get_d)
                , bp::default_call_policies() )    
        .staticmethod( "get_d" );

    bp::class_< noncopyables::c_t, boost::noncopyable >( "c_t" )    
        .def( "get_c"
                , (char (*)(  ))(&noncopyables::c_t::get_c)
                , bp::default_call_policies() )    
        .staticmethod( "get_c" );

    bp::class_< noncopyables::b_t, boost::noncopyable >( "b_t", bp::no_init )    
        .def( "get_b"
                , (char (*)(  ))(&noncopyables::b_t::get_b)
                , bp::default_call_policies() )    
        .staticmethod( "get_b" );

    bp::class_< noncopyables::dd_t, bp::bases< noncopyables::d_t >, boost::noncopyable >( "dd_t" )    
        .def( bp::init< >()[bp::default_call_policies()] )    
        .def( "get_dd"
                , (char (*)(  ))(&noncopyables::dd_t::get_dd)
                , bp::default_call_policies() )    
        .staticmethod( "get_dd" );

    bp::class_< noncopyables::a_t, boost::noncopyable >( "a_t", bp::no_init )    
        .def( "get_a"
                , (char (*)(  ))(&noncopyables::a_t::get_a)
                , bp::default_call_policies() )    
        .staticmethod( "get_a" );
}
