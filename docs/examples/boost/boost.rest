===============
boost libraries
===============

.. contents:: Table of contents

--------------
 Introduction
--------------

What is the `pyplusplus`_?
--------------------------

.. include:: ./../../definition.rest

What is the Boost?
------------------

`Boost`_ is repository of free peer-reviewed portable C++ source libraries. 

`Boost`_ works on almost any modern operating system, including UNIX and Windows 
variants. 

Abstract
--------

`Boost`_ libraries have good interface, documentation and unit tests.
A lot of people contributed thier knowledge and expirience to those libraries.
Ten `Boost`_ libraries are already included in the `C++ Standards Committee's`_
Library Technical Report ( `TR1`_ ) as a step toward becoming part of a future 
C++ Standard. More Boost libraries are proposed for the upcoming `TR2`_.

.. _`C++ Standards Committee's` : http://www.open-std.org/jtc1/sc22/wg21/
.. _`TR1` : http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1745.pdf
.. _`TR2` : http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1810.html


I believe that `pyplusplus`_ is ready for hard work. It is quick, stable and 
flexible. `pyplusplus`_ is a new tool and in my opinion I should prove its 
usefulness. Using `pyplusplus`_, I exposed next libraries to Python:

  * `boost.date_time`_
  * `boost.crc`_
  * `boost.rational`_
  * `boost.random`_

There are few reasons I choose to expose those libraries. 

1. I used those libraries at my work. 

2. All those libraries have:

  * good documentation
  * well defined interfaces
  * clear concepts 
  * comprehensive unit tests

3. I think, that Python is missing functionality provided by `boost.date_time`_
   and `boost.random`_ libraries. 

I spent different amount of time on each library. It took me one week, to expose 
the `boost.date_time`_ library. I added few missing features to `pyplusplus`_,
polished the existing ones. Most of the time I spent translating tests from C++ 
to `Python`_. It took me 3 days to expose all other libraries.

---------------
pyboost package
---------------

...

--------
Download
--------

http://sourceforge.net/project/showfiles.php?group_id=118209. 

I am going to continue development of the `Python`_ bindings for 
`boost.date_time`_ library.


.. _`boost.date_time` : http://boost.org/doc/html/date_time.html
.. _`boost.crc` : http://boost.org/libs/crc/index.html
.. _`boost.rational` : http://boost.org/libs/rational/index.html
.. _`boost.random` : http://boost.org/libs/random/index.html


.. _`environment.py`: http://cvs.sourceforge.net/viewcvs.py/pygccxml/source/pyplusplus/examples/py_easybmp/environment.py?view=markup
.. _`sconstruct`: http://cvs.sourceforge.net/viewcvs.py/pygccxml/source/pyplusplus/examples/py_easybmp/sconstruct?view=markup
.. _`Python`: http://www.python.org
.. _`pygccxml`: http://www.language-binding.net/pygccxml/pygccxml.html
.. _`boost.date_time`: http://boost.org/doc/html/date_time.html
.. _`date_time`: http://boost.org/doc/html/date_time.html
.. _`boost`: http://www.boost.org
.. _`Boost`: http://www.boost.org
.. _`boost.python`: http://www.boost.org/libs/python/doc/index.html
.. _`boost.operators`: http://www.boost.org/
.. _`GCC-XML`: http://www.gccxml.org
.. _`pyplusplus` : ./../../pyplusplus.html

..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:
